@import "utils";

$colors: (
  "white": #fff,
  "sunny": #f7f034,
  "partiallySunny": #ebbd51,
  "cloudy": #bebfc1,
  "irish": #787878,
  "night": #1a5b9d,
  "off-black": #525c68
);

@function color($key) {
  @return map-get($colors, $key);
}

@function camelize($string) {
  $progress: $string;
  $result: "";
  $exclude: " ", "-", "–", "—", "_", ",", ";", ":", ".";

  @while str-length($progress) > 0 {
    $char: str-slice($progress, 1, 1);

    @if contain($exclude, $char) {
      $progress: capitalize(str-slice($progress, 2, 2)) +
        str-slice($progress, 3);
    }

    @else {
      $result: $result + $char;
      $progress: str-slice($progress, 2);
    }
  }

  @return $result;
}

@each $i in $colors {
  .#{nth($i, 1)} {
    color: nth($i, 2);
  }

  .bg-#{nth($i, 1)} {
    background-color: nth($i, 2);
  }

  .b--#{nth($i, 1)} {
    border-color: nth($i, 2);
  }
}

.hover-bg-blue-light:hover {
  background-color: color("blue-light");
}

// the :export directive if for js to use same colors
:export {
  @each $i in $colors {
    #{camelize(nth($i, 1))}: nth($i, 2);
  }
}
